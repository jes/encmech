#!/usr/bin/perl

use Mojolicious::Lite;
use JSON qw(encode_json);
use Text::Markdown qw(markdown);

use lib 'lib';

use EncMech;
use URI::Escape;

sub canon {
    my ($q) = @_;
    $q = lc $q;
    $q = uri_unescape($q);
    $q =~ s/_/ /g;
    $q =~ s/</(/g;
    $q =~ s/>/)/g;
    $q =~ s/^\s*//;
    $q =~ s/\s*$//;
    $q =~ s/\s+/ /g;
    return $q;
}

get '/encmech/' => sub {
    my ($c) = shift;
    return $c->render('index');
};

get '/encmech/content' => sub {
    my $c = shift;
    my $q = $c->param('q');
    return $c->render('index') if !$q;

    $q = canon($q);

    $c->render_later;

    EncMech::retrieve($q, sub {
        my ($page, $finished) = @_;

        return if !$c->tx;

        $c->write(encode_json({content => markdown($page)})."\n");

        $c->finish if $finished;
    });
};

app->config(hypnotoad => {listen => ["http://*:9876"], workers => 2});

app->start;
