<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Encyclopedia Mechanica</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background-color: white;
            font-size: 18px; /* Increased base font size */
        }
        .container {
            width: 100%;
            padding: 20px;
            box-sizing: border-box;
        }
        .header {
            background-color: #f4f4f4; /* Light grey background for header */
            padding: 20px;
            border-bottom: 1px solid #ddd; /* Border to separate header */
        }
        h1 {
            color: #333;
        }
        form {
            display: flex;
            margin-bottom: 20px;
            width: auto; /* Changed from 100% to auto */
            position: absolute;
            top: 60px; /* Moved further down */
            right: 20px;
        }
        input[type="text"] {
            flex-grow: 1;
            padding: 10px;
            font-size: 18px; /* Increased input font size */
            border: 1px solid #ddd;
            border-radius: 4px 0 0 4px;
            width: 200px; /* Set a fixed width */
        }
        button {
            padding: 10px 20px;
            font-size: 18px; /* Increased button font size */
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .search-results {
            width: 100%;
        }
        .loading {
            font-size: 24px;
            text-align: center;
            margin-top: 20px;
        }
        .loading span {
            display: inline-block;
            animation: blink 1.4s infinite both;
            font-size: 48px; /* Increased dot size */
        }
        .loading span:nth-child(2) {
            animation-delay: 0.2s;
        }
        .loading span:nth-child(3) {
            animation-delay: 0.4s;
        }
        @keyframes blink {
            0%, 20%, 50%, 80%, 100% {
                opacity: 1;
            }
            40% {
                opacity: 0;
            }
            60% {
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Encyclopedia Mechanica</h1>
        <h3><i>Omni quaestioni responsum</i></h3>
        <p>Encyclopedia Mechanica generates encyclopedia pages on-demand in response to queries.</p>
    </div>
    <div class="container">
        <form id="search-form">
            <input id="q" name="q" type="text" placeholder="Enter your search query">
            <button type="submit">Search</button>
        </form>

        <div id="content">
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fragment = window.location.hash.substring(1);
            if (fragment) {
                fetchContent(fragment);
                document.getElementById('q').value = decodeURIComponent(fragment);
            }
        });

        document.getElementById('search-form').addEventListener('submit', function(event) {
            event.preventDefault();
            const query = document.getElementById('q').value.trim();
            if (query) {
                window.location.hash = query;
                fetchContent(query);
            } else {
                document.getElementById('content').innerHTML = '';
                window.location.hash = '';
            }
        });

        function fetchContent(query) {
            document.getElementById('content').innerHTML = '<div class="loading"><span>.</span><span>.</span><span>.</span></div>';
            fetch(`/encmech/content?q=${encodeURIComponent(query)}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('content').innerHTML = data;
                    addLinkListeners();
                })
                .catch(error => {
                    document.getElementById('content').innerHTML = '<p>Error loading content</p>';
                });
        }

        function addLinkListeners() {
            const links = document.querySelectorAll('#content a[href^="#"]');
            links.forEach(link => {
                link.addEventListener('click', function(event) {
                    event.preventDefault();
                    const fragment = this.getAttribute('href').substring(1);
                    window.location.hash = fragment;
                    fetchContent(fragment);
                });
            });
        }
    </script>
</body>
</html>
